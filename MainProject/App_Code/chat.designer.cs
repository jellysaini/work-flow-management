#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.1434
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Linq;
using System.Data.Linq.Mapping;
using System.Linq;
using System.Linq.Expressions;
using System.Reflection;



[System.Data.Linq.Mapping.DatabaseAttribute(Name="WorkFlow")]
public partial class chatDataContext : System.Data.Linq.DataContext
{
	
	private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
	
  #region Extensibility Method Definitions
  partial void OnCreated();
  partial void InserttbUsr(tbUsr instance);
  partial void UpdatetbUsr(tbUsr instance);
  partial void DeletetbUsr(tbUsr instance);
  partial void Inserttbrom(tbrom instance);
  partial void Updatetbrom(tbrom instance);
  partial void Deletetbrom(tbrom instance);
  partial void Inserttbmsg(tbmsg instance);
  partial void Updatetbmsg(tbmsg instance);
  partial void Deletetbmsg(tbmsg instance);
  partial void Inserttblog(tblog instance);
  partial void Updatetblog(tblog instance);
  partial void Deletetblog(tblog instance);
  #endregion
	
	public chatDataContext() : 
			base(global::System.Configuration.ConfigurationManager.ConnectionStrings["WorkFlowConnectionString"].ConnectionString, mappingSource)
	{
		OnCreated();
	}
	
	public chatDataContext(string connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public chatDataContext(System.Data.IDbConnection connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public chatDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public chatDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public System.Data.Linq.Table<tbUsr> tbUsrs
	{
		get
		{
			return this.GetTable<tbUsr>();
		}
	}
	
	public System.Data.Linq.Table<tbrom> tbroms
	{
		get
		{
			return this.GetTable<tbrom>();
		}
	}
	
	public System.Data.Linq.Table<tbmsg> tbmsgs
	{
		get
		{
			return this.GetTable<tbmsg>();
		}
	}
	
	public System.Data.Linq.Table<tblog> tblogs
	{
		get
		{
			return this.GetTable<tblog>();
		}
	}
}

[Table(Name="dbo.tbUsr")]
public partial class tbUsr : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _UsrId;
	
	private string _UsrName;
	
	private string _UsrEmailAdd;
	
	private string _UsrPassword;
	
	private System.Nullable<int> _UsrDesignation;
	
	private System.Nullable<long> _UsrSalary;
	
	private System.Nullable<int> _UsrSalaryDuration;
	
	private System.Nullable<System.DateTime> _UsrRegDate;
	
	private System.Nullable<System.DateTime> _UsrLstLgnDate;
	
	private System.Nullable<int> _UsrStatus;
	
	private System.Nullable<int> _UsrUpperId;
	
	private EntitySet<tbmsg> _tbmsgs;
	
	private EntitySet<tbmsg> _tbmsgs1;
	
	private EntitySet<tblog> _tblogs;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUsrIdChanging(int value);
    partial void OnUsrIdChanged();
    partial void OnUsrNameChanging(string value);
    partial void OnUsrNameChanged();
    partial void OnUsrEmailAddChanging(string value);
    partial void OnUsrEmailAddChanged();
    partial void OnUsrPasswordChanging(string value);
    partial void OnUsrPasswordChanged();
    partial void OnUsrDesignationChanging(System.Nullable<int> value);
    partial void OnUsrDesignationChanged();
    partial void OnUsrSalaryChanging(System.Nullable<long> value);
    partial void OnUsrSalaryChanged();
    partial void OnUsrSalaryDurationChanging(System.Nullable<int> value);
    partial void OnUsrSalaryDurationChanged();
    partial void OnUsrRegDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUsrRegDateChanged();
    partial void OnUsrLstLgnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUsrLstLgnDateChanged();
    partial void OnUsrStatusChanging(System.Nullable<int> value);
    partial void OnUsrStatusChanged();
    partial void OnUsrUpperIdChanging(System.Nullable<int> value);
    partial void OnUsrUpperIdChanged();
    #endregion
	
	public tbUsr()
	{
		this._tbmsgs = new EntitySet<tbmsg>(new Action<tbmsg>(this.attach_tbmsgs), new Action<tbmsg>(this.detach_tbmsgs));
		this._tbmsgs1 = new EntitySet<tbmsg>(new Action<tbmsg>(this.attach_tbmsgs1), new Action<tbmsg>(this.detach_tbmsgs1));
		this._tblogs = new EntitySet<tblog>(new Action<tblog>(this.attach_tblogs), new Action<tblog>(this.detach_tblogs));
		OnCreated();
	}
	
	[Column(Storage="_UsrId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int UsrId
	{
		get
		{
			return this._UsrId;
		}
		set
		{
			if ((this._UsrId != value))
			{
				this.OnUsrIdChanging(value);
				this.SendPropertyChanging();
				this._UsrId = value;
				this.SendPropertyChanged("UsrId");
				this.OnUsrIdChanged();
			}
		}
	}
	
	[Column(Storage="_UsrName", DbType="VarChar(50)")]
	public string UsrName
	{
		get
		{
			return this._UsrName;
		}
		set
		{
			if ((this._UsrName != value))
			{
				this.OnUsrNameChanging(value);
				this.SendPropertyChanging();
				this._UsrName = value;
				this.SendPropertyChanged("UsrName");
				this.OnUsrNameChanged();
			}
		}
	}
	
	[Column(Storage="_UsrEmailAdd", DbType="VarChar(50)")]
	public string UsrEmailAdd
	{
		get
		{
			return this._UsrEmailAdd;
		}
		set
		{
			if ((this._UsrEmailAdd != value))
			{
				this.OnUsrEmailAddChanging(value);
				this.SendPropertyChanging();
				this._UsrEmailAdd = value;
				this.SendPropertyChanged("UsrEmailAdd");
				this.OnUsrEmailAddChanged();
			}
		}
	}
	
	[Column(Storage="_UsrPassword", DbType="VarChar(50)")]
	public string UsrPassword
	{
		get
		{
			return this._UsrPassword;
		}
		set
		{
			if ((this._UsrPassword != value))
			{
				this.OnUsrPasswordChanging(value);
				this.SendPropertyChanging();
				this._UsrPassword = value;
				this.SendPropertyChanged("UsrPassword");
				this.OnUsrPasswordChanged();
			}
		}
	}
	
	[Column(Storage="_UsrDesignation", DbType="Int")]
	public System.Nullable<int> UsrDesignation
	{
		get
		{
			return this._UsrDesignation;
		}
		set
		{
			if ((this._UsrDesignation != value))
			{
				this.OnUsrDesignationChanging(value);
				this.SendPropertyChanging();
				this._UsrDesignation = value;
				this.SendPropertyChanged("UsrDesignation");
				this.OnUsrDesignationChanged();
			}
		}
	}
	
	[Column(Storage="_UsrSalary", DbType="BigInt")]
	public System.Nullable<long> UsrSalary
	{
		get
		{
			return this._UsrSalary;
		}
		set
		{
			if ((this._UsrSalary != value))
			{
				this.OnUsrSalaryChanging(value);
				this.SendPropertyChanging();
				this._UsrSalary = value;
				this.SendPropertyChanged("UsrSalary");
				this.OnUsrSalaryChanged();
			}
		}
	}
	
	[Column(Storage="_UsrSalaryDuration", DbType="Int")]
	public System.Nullable<int> UsrSalaryDuration
	{
		get
		{
			return this._UsrSalaryDuration;
		}
		set
		{
			if ((this._UsrSalaryDuration != value))
			{
				this.OnUsrSalaryDurationChanging(value);
				this.SendPropertyChanging();
				this._UsrSalaryDuration = value;
				this.SendPropertyChanged("UsrSalaryDuration");
				this.OnUsrSalaryDurationChanged();
			}
		}
	}
	
	[Column(Storage="_UsrRegDate", DbType="DateTime")]
	public System.Nullable<System.DateTime> UsrRegDate
	{
		get
		{
			return this._UsrRegDate;
		}
		set
		{
			if ((this._UsrRegDate != value))
			{
				this.OnUsrRegDateChanging(value);
				this.SendPropertyChanging();
				this._UsrRegDate = value;
				this.SendPropertyChanged("UsrRegDate");
				this.OnUsrRegDateChanged();
			}
		}
	}
	
	[Column(Storage="_UsrLstLgnDate", DbType="DateTime")]
	public System.Nullable<System.DateTime> UsrLstLgnDate
	{
		get
		{
			return this._UsrLstLgnDate;
		}
		set
		{
			if ((this._UsrLstLgnDate != value))
			{
				this.OnUsrLstLgnDateChanging(value);
				this.SendPropertyChanging();
				this._UsrLstLgnDate = value;
				this.SendPropertyChanged("UsrLstLgnDate");
				this.OnUsrLstLgnDateChanged();
			}
		}
	}
	
	[Column(Storage="_UsrStatus", DbType="Int")]
	public System.Nullable<int> UsrStatus
	{
		get
		{
			return this._UsrStatus;
		}
		set
		{
			if ((this._UsrStatus != value))
			{
				this.OnUsrStatusChanging(value);
				this.SendPropertyChanging();
				this._UsrStatus = value;
				this.SendPropertyChanged("UsrStatus");
				this.OnUsrStatusChanged();
			}
		}
	}
	
	[Column(Storage="_UsrUpperId", DbType="Int")]
	public System.Nullable<int> UsrUpperId
	{
		get
		{
			return this._UsrUpperId;
		}
		set
		{
			if ((this._UsrUpperId != value))
			{
				this.OnUsrUpperIdChanging(value);
				this.SendPropertyChanging();
				this._UsrUpperId = value;
				this.SendPropertyChanged("UsrUpperId");
				this.OnUsrUpperIdChanged();
			}
		}
	}
	
	[Association(Name="tbUsr_tbmsg", Storage="_tbmsgs", OtherKey="msgfrmusr")]
	public EntitySet<tbmsg> tbmsgs
	{
		get
		{
			return this._tbmsgs;
		}
		set
		{
			this._tbmsgs.Assign(value);
		}
	}
	
	[Association(Name="tbUsr_tbmsg1", Storage="_tbmsgs1", OtherKey="msgtousrcod")]
	public EntitySet<tbmsg> tbmsgs1
	{
		get
		{
			return this._tbmsgs1;
		}
		set
		{
			this._tbmsgs1.Assign(value);
		}
	}
	
	[Association(Name="tbUsr_tblog", Storage="_tblogs", OtherKey="logusrcod")]
	public EntitySet<tblog> tblogs
	{
		get
		{
			return this._tblogs;
		}
		set
		{
			this._tblogs.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_tbmsgs(tbmsg entity)
	{
		this.SendPropertyChanging();
		entity.tbUsr = this;
	}
	
	private void detach_tbmsgs(tbmsg entity)
	{
		this.SendPropertyChanging();
		entity.tbUsr = null;
	}
	
	private void attach_tbmsgs1(tbmsg entity)
	{
		this.SendPropertyChanging();
		entity.tbUsr1 = this;
	}
	
	private void detach_tbmsgs1(tbmsg entity)
	{
		this.SendPropertyChanging();
		entity.tbUsr1 = null;
	}
	
	private void attach_tblogs(tblog entity)
	{
		this.SendPropertyChanging();
		entity.tbUsr = this;
	}
	
	private void detach_tblogs(tblog entity)
	{
		this.SendPropertyChanging();
		entity.tbUsr = null;
	}
}

[Table(Name="dbo.tbrom")]
public partial class tbrom : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _romcod;
	
	private string _romnam;
	
	private EntitySet<tbmsg> _tbmsgs;
	
	private EntitySet<tblog> _tblogs;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnromcodChanging(int value);
    partial void OnromcodChanged();
    partial void OnromnamChanging(string value);
    partial void OnromnamChanged();
    #endregion
	
	public tbrom()
	{
		this._tbmsgs = new EntitySet<tbmsg>(new Action<tbmsg>(this.attach_tbmsgs), new Action<tbmsg>(this.detach_tbmsgs));
		this._tblogs = new EntitySet<tblog>(new Action<tblog>(this.attach_tblogs), new Action<tblog>(this.detach_tblogs));
		OnCreated();
	}
	
	[Column(Storage="_romcod", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int romcod
	{
		get
		{
			return this._romcod;
		}
		set
		{
			if ((this._romcod != value))
			{
				this.OnromcodChanging(value);
				this.SendPropertyChanging();
				this._romcod = value;
				this.SendPropertyChanged("romcod");
				this.OnromcodChanged();
			}
		}
	}
	
	[Column(Storage="_romnam", DbType="VarChar(50)")]
	public string romnam
	{
		get
		{
			return this._romnam;
		}
		set
		{
			if ((this._romnam != value))
			{
				this.OnromnamChanging(value);
				this.SendPropertyChanging();
				this._romnam = value;
				this.SendPropertyChanged("romnam");
				this.OnromnamChanged();
			}
		}
	}
	
	[Association(Name="tbrom_tbmsg", Storage="_tbmsgs", OtherKey="msgromcod")]
	public EntitySet<tbmsg> tbmsgs
	{
		get
		{
			return this._tbmsgs;
		}
		set
		{
			this._tbmsgs.Assign(value);
		}
	}
	
	[Association(Name="tbrom_tblog", Storage="_tblogs", OtherKey="logromcod")]
	public EntitySet<tblog> tblogs
	{
		get
		{
			return this._tblogs;
		}
		set
		{
			this._tblogs.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_tbmsgs(tbmsg entity)
	{
		this.SendPropertyChanging();
		entity.tbrom = this;
	}
	
	private void detach_tbmsgs(tbmsg entity)
	{
		this.SendPropertyChanging();
		entity.tbrom = null;
	}
	
	private void attach_tblogs(tblog entity)
	{
		this.SendPropertyChanging();
		entity.tbrom = this;
	}
	
	private void detach_tblogs(tblog entity)
	{
		this.SendPropertyChanging();
		entity.tbrom = null;
	}
}

[Table(Name="dbo.tbmsg")]
public partial class tbmsg : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _msgcod;
	
	private string _msgdsc;
	
	private System.Nullable<System.DateTime> _msgdat;
	
	private System.Nullable<int> _msgfrmusr;
	
	private System.Nullable<int> _msgtousrcod;
	
	private System.Nullable<int> _msgromcod;
	
	private EntityRef<tbrom> _tbrom;
	
	private EntityRef<tbUsr> _tbUsr;
	
	private EntityRef<tbUsr> _tbUsr1;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnmsgcodChanging(int value);
    partial void OnmsgcodChanged();
    partial void OnmsgdscChanging(string value);
    partial void OnmsgdscChanged();
    partial void OnmsgdatChanging(System.Nullable<System.DateTime> value);
    partial void OnmsgdatChanged();
    partial void OnmsgfrmusrChanging(System.Nullable<int> value);
    partial void OnmsgfrmusrChanged();
    partial void OnmsgtousrcodChanging(System.Nullable<int> value);
    partial void OnmsgtousrcodChanged();
    partial void OnmsgromcodChanging(System.Nullable<int> value);
    partial void OnmsgromcodChanged();
    #endregion
	
	public tbmsg()
	{
		this._tbrom = default(EntityRef<tbrom>);
		this._tbUsr = default(EntityRef<tbUsr>);
		this._tbUsr1 = default(EntityRef<tbUsr>);
		OnCreated();
	}
	
	[Column(Storage="_msgcod", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int msgcod
	{
		get
		{
			return this._msgcod;
		}
		set
		{
			if ((this._msgcod != value))
			{
				this.OnmsgcodChanging(value);
				this.SendPropertyChanging();
				this._msgcod = value;
				this.SendPropertyChanged("msgcod");
				this.OnmsgcodChanged();
			}
		}
	}
	
	[Column(Storage="_msgdsc", DbType="VarChar(50)")]
	public string msgdsc
	{
		get
		{
			return this._msgdsc;
		}
		set
		{
			if ((this._msgdsc != value))
			{
				this.OnmsgdscChanging(value);
				this.SendPropertyChanging();
				this._msgdsc = value;
				this.SendPropertyChanged("msgdsc");
				this.OnmsgdscChanged();
			}
		}
	}
	
	[Column(Storage="_msgdat", DbType="DateTime")]
	public System.Nullable<System.DateTime> msgdat
	{
		get
		{
			return this._msgdat;
		}
		set
		{
			if ((this._msgdat != value))
			{
				this.OnmsgdatChanging(value);
				this.SendPropertyChanging();
				this._msgdat = value;
				this.SendPropertyChanged("msgdat");
				this.OnmsgdatChanged();
			}
		}
	}
	
	[Column(Storage="_msgfrmusr", DbType="Int")]
	public System.Nullable<int> msgfrmusr
	{
		get
		{
			return this._msgfrmusr;
		}
		set
		{
			if ((this._msgfrmusr != value))
			{
				if (this._tbUsr.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnmsgfrmusrChanging(value);
				this.SendPropertyChanging();
				this._msgfrmusr = value;
				this.SendPropertyChanged("msgfrmusr");
				this.OnmsgfrmusrChanged();
			}
		}
	}
	
	[Column(Storage="_msgtousrcod", DbType="Int")]
	public System.Nullable<int> msgtousrcod
	{
		get
		{
			return this._msgtousrcod;
		}
		set
		{
			if ((this._msgtousrcod != value))
			{
				if (this._tbUsr1.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnmsgtousrcodChanging(value);
				this.SendPropertyChanging();
				this._msgtousrcod = value;
				this.SendPropertyChanged("msgtousrcod");
				this.OnmsgtousrcodChanged();
			}
		}
	}
	
	[Column(Storage="_msgromcod", DbType="Int")]
	public System.Nullable<int> msgromcod
	{
		get
		{
			return this._msgromcod;
		}
		set
		{
			if ((this._msgromcod != value))
			{
				if (this._tbrom.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnmsgromcodChanging(value);
				this.SendPropertyChanging();
				this._msgromcod = value;
				this.SendPropertyChanged("msgromcod");
				this.OnmsgromcodChanged();
			}
		}
	}
	
	[Association(Name="tbrom_tbmsg", Storage="_tbrom", ThisKey="msgromcod", IsForeignKey=true)]
	public tbrom tbrom
	{
		get
		{
			return this._tbrom.Entity;
		}
		set
		{
			tbrom previousValue = this._tbrom.Entity;
			if (((previousValue != value) 
						|| (this._tbrom.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._tbrom.Entity = null;
					previousValue.tbmsgs.Remove(this);
				}
				this._tbrom.Entity = value;
				if ((value != null))
				{
					value.tbmsgs.Add(this);
					this._msgromcod = value.romcod;
				}
				else
				{
					this._msgromcod = default(Nullable<int>);
				}
				this.SendPropertyChanged("tbrom");
			}
		}
	}
	
	[Association(Name="tbUsr_tbmsg", Storage="_tbUsr", ThisKey="msgfrmusr", IsForeignKey=true)]
	public tbUsr tbUsr
	{
		get
		{
			return this._tbUsr.Entity;
		}
		set
		{
			tbUsr previousValue = this._tbUsr.Entity;
			if (((previousValue != value) 
						|| (this._tbUsr.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._tbUsr.Entity = null;
					previousValue.tbmsgs.Remove(this);
				}
				this._tbUsr.Entity = value;
				if ((value != null))
				{
					value.tbmsgs.Add(this);
					this._msgfrmusr = value.UsrId;
				}
				else
				{
					this._msgfrmusr = default(Nullable<int>);
				}
				this.SendPropertyChanged("tbUsr");
			}
		}
	}
	
	[Association(Name="tbUsr_tbmsg1", Storage="_tbUsr1", ThisKey="msgtousrcod", IsForeignKey=true)]
	public tbUsr tbUsr1
	{
		get
		{
			return this._tbUsr1.Entity;
		}
		set
		{
			tbUsr previousValue = this._tbUsr1.Entity;
			if (((previousValue != value) 
						|| (this._tbUsr1.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._tbUsr1.Entity = null;
					previousValue.tbmsgs1.Remove(this);
				}
				this._tbUsr1.Entity = value;
				if ((value != null))
				{
					value.tbmsgs1.Add(this);
					this._msgtousrcod = value.UsrId;
				}
				else
				{
					this._msgtousrcod = default(Nullable<int>);
				}
				this.SendPropertyChanged("tbUsr1");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[Table(Name="dbo.tblog")]
public partial class tblog : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _logcod;
	
	private System.Nullable<int> _logusrcod;
	
	private System.Nullable<int> _logromcod;
	
	private EntityRef<tbrom> _tbrom;
	
	private EntityRef<tbUsr> _tbUsr;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnlogcodChanging(int value);
    partial void OnlogcodChanged();
    partial void OnlogusrcodChanging(System.Nullable<int> value);
    partial void OnlogusrcodChanged();
    partial void OnlogromcodChanging(System.Nullable<int> value);
    partial void OnlogromcodChanged();
    #endregion
	
	public tblog()
	{
		this._tbrom = default(EntityRef<tbrom>);
		this._tbUsr = default(EntityRef<tbUsr>);
		OnCreated();
	}
	
	[Column(Storage="_logcod", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int logcod
	{
		get
		{
			return this._logcod;
		}
		set
		{
			if ((this._logcod != value))
			{
				this.OnlogcodChanging(value);
				this.SendPropertyChanging();
				this._logcod = value;
				this.SendPropertyChanged("logcod");
				this.OnlogcodChanged();
			}
		}
	}
	
	[Column(Storage="_logusrcod", DbType="Int")]
	public System.Nullable<int> logusrcod
	{
		get
		{
			return this._logusrcod;
		}
		set
		{
			if ((this._logusrcod != value))
			{
				if (this._tbUsr.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnlogusrcodChanging(value);
				this.SendPropertyChanging();
				this._logusrcod = value;
				this.SendPropertyChanged("logusrcod");
				this.OnlogusrcodChanged();
			}
		}
	}
	
	[Column(Storage="_logromcod", DbType="Int")]
	public System.Nullable<int> logromcod
	{
		get
		{
			return this._logromcod;
		}
		set
		{
			if ((this._logromcod != value))
			{
				if (this._tbrom.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnlogromcodChanging(value);
				this.SendPropertyChanging();
				this._logromcod = value;
				this.SendPropertyChanged("logromcod");
				this.OnlogromcodChanged();
			}
		}
	}
	
	[Association(Name="tbrom_tblog", Storage="_tbrom", ThisKey="logromcod", IsForeignKey=true)]
	public tbrom tbrom
	{
		get
		{
			return this._tbrom.Entity;
		}
		set
		{
			tbrom previousValue = this._tbrom.Entity;
			if (((previousValue != value) 
						|| (this._tbrom.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._tbrom.Entity = null;
					previousValue.tblogs.Remove(this);
				}
				this._tbrom.Entity = value;
				if ((value != null))
				{
					value.tblogs.Add(this);
					this._logromcod = value.romcod;
				}
				else
				{
					this._logromcod = default(Nullable<int>);
				}
				this.SendPropertyChanged("tbrom");
			}
		}
	}
	
	[Association(Name="tbUsr_tblog", Storage="_tbUsr", ThisKey="logusrcod", IsForeignKey=true)]
	public tbUsr tbUsr
	{
		get
		{
			return this._tbUsr.Entity;
		}
		set
		{
			tbUsr previousValue = this._tbUsr.Entity;
			if (((previousValue != value) 
						|| (this._tbUsr.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._tbUsr.Entity = null;
					previousValue.tblogs.Remove(this);
				}
				this._tbUsr.Entity = value;
				if ((value != null))
				{
					value.tblogs.Add(this);
					this._logusrcod = value.UsrId;
				}
				else
				{
					this._logusrcod = default(Nullable<int>);
				}
				this.SendPropertyChanged("tbUsr");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}
#pragma warning restore 1591
